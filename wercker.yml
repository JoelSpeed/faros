box:
  id: golang:1.11

dep-install:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/faros
    - script: Install Dep
      code: |
        go get -u github.com/golang/dep/cmd/dep
    - add-to-known_hosts:
        hostname: github.com
        fingerprint: nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
        type: rsa
    - wercker/add-ssh-key:
      keyname: PUSHER_CI_SSH_KEY
    - script:
      name: Fetch dependencies
      code: |
        dep ensure -v --vendor-only
        shopt -s dotglob
        mv ./* $WERCKER_OUTPUT_DIR

generate:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/faros
    - script:
        name: configure make
        code: touch .env && make prepare-env-1.13
    - script:
        name: Generate code
        code: make generate
    - script:
        name: Generate manifests
        code: make manifests
    - script:
        name: Check git tree is clean
        code: if [[ ! -z $(git status -s) ]]; then git status; exit 1; fi

lint:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/faros
    - script:
        name: configure make
        code: touch .env && make prepare-env-1.13
    - script:
        name: Run linter(s)
        code: |
          golangci-lint run --disable-all \
            --enable=vet \
            --enable=vetshadow \
            --enable=golint \
            --enable=ineffassign \
            --enable=goconst \
            --enable=deadcode \
            --enable=gofmt \
            --enable=goimports \
            --skip-dirs=pkg/client/ \
            --deadline=120s \
            --verbose \
            --tests ./...

test:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/faros
    - script:
        name: configure make
        code: touch .env && make prepare-env-1.13
    - script:
        name: ginkgo
        code: ginkgo -v -race -randomizeAllSpecs ./pkg/... ./cmd/...

build:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/faros
    - script:
        name: go build
        code: GOPATH=/go GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o controller-manager github.com/pusher/faros/cmd/manager
    - script:
        name: Copy to output directory
        code: cp controller-manager "$WERCKER_OUTPUT_DIR"

push-to-ecr:
  box: alpine:3.8
  steps:
    - script:
        name: Copy binary
        code: cp controller-manager /bin/controller-manager
    - script:
        name: Install CA-Certificates
        code: apk --no-cache add ca-certificates
    - script:
        name: Remove Pipeline
        code: rm -rf /pipeline
    - internal/docker-push:
        aws-access-key: $AWS_CI_ACCESS_KEY_ID
        aws-secret-key: $AWS_CI_SECRET_ACCESS_KEY
        aws-region: us-east-1
        aws-registry-id: $AWS_CI_REGISTRY_ID
        repository: pusher/faros
        tag: $WERCKER_GIT_COMMIT, $WERCKER_GIT_BRANCH, latest
        entrypoint: /bin/controller-manager
